{% extends 'layout.twig' %}

{% block body %}
  <h1>{{ title }}</h1>
  <p>Welcome to {{ title }} </p>
  <div id="system-messages"></div>
  <div id="chat-container">
    <div id="chat-header">
       <img src="/img/chat.png" alt="icon" width="50px" height="50px"></img>
      Chat Room
    </div>
    <div id="chat-messages"></div>
    <div id="chat-input">
      <input type="text" onkeyup="isTyping()" id="msg" placeholder="Type your message...">
      <button onclick="sendMsg()">Send</button>
    </div>
  </div>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    var name = prompt("Enter your name!");
    var socket = io({ query: { username: name } });

    socket.on("system-msg", (data) => {
      var systemMessages = document.getElementById("system-messages");
      var systemMessage = document.createElement('p');
      systemMessage.innerHTML = data;
      systemMessages.appendChild(systemMessage);
    });

    socket.on("msg", (data) => {
      var messageData = JSON.parse(data);
      var chatMessages = document.getElementById("chat-messages");
      var messageElement = document.createElement('div');
      messageElement.className = 'message-container ' + (messageData.username === name ? 'my-message' : 'other-message');
      messageElement.innerHTML = '<strong>' + messageData.username + ':</strong> ' + messageData.message;
      chatMessages.appendChild(messageElement);
      chatMessages.scrollTop = chatMessages.scrollHeight; // Auto-scroll to the latest message
    });

    function sendMsg() {
      var input = document.getElementById("msg");
      if (input.value) {
        var messageData = {
          username: name,
          message: input.value
        };
        socket.emit("send-msg", JSON.stringify(messageData));
        input.value = '';
      }
    }

    function isTyping() {
      var data = name + " is typing...";
      console.log(data);
      socket.emit("uTyping", data);
    }

    socket.on("msg-typing", (data) => {
      var typingIndicator = document.getElementById("typing-indicator");
      typingIndicator.innerHTML = data;
      typingIndicator.style.display = "block";
      setTimeout(() => {
        typingIndicator.style.display = "none";
      }, 2000);
    });
  </script>

  <style>
  button {
  background-color: #d8c3e5; /* Pastel purple */
  color: #fff; /* White text color */
  border: none; /* No border */
  border-radius: 10px; /* Border radius */
  padding: 10px 15px; /* Adjust padding as needed */
  cursor: pointer;
  margin-left: 20px;
}

/* Hover effect (optional) */
button:hover {
  background-color: #b99bd1; /* Lighter pastel purple on hover */
}
    #chat-header {
      background-color: #d8c3e5; /* Pastel purple */
      color: black; /* White text color */
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      padding: 10px;
      display: flex;
      align-items: center;
      justify-content: space-between;
    }

     #chat-container {
    max-width: 500px; /* Adjust the max-width to your preference */
    margin: 0 auto;
    border-radius: 10px; /* Add border radius */
    background-color: #f9f9f9; /* Light gray background color */
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2); /* Darker shadow effect */
    overflow: hidden; /* Ensure the border-radius doesn't affect the shadow */
  }

    #chat-messages {
      max-height: 300px;
      overflow-y: scroll;
      margin-bottom: 10px;
      color: black;
      padding: 10px;
    }
.message-container {
    max-width: 60%; /* Adjust this value to your preference */
    padding: 8px;
    margin-bottom: 8px;
    border-radius: 10px; /* Rounded corners */
    display: flex;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Shadow effect */
  }

  .my-message {
    background-color: white;
    border-radius: 10px; /* Rounded corners */
    justify-content: flex-end; /* Align sender's messages to the right */
    margin-left: auto; /* Push the entire container to the right */
  }

  .other-message {
    background-color: #d8c3e5; /* Pastel purple */
    color: #000; /* Black text color */
    border-radius: 10px; /* Rounded corners */
    justify-content: flex-start; /* Align received messages to the left */
    margin-right: auto; /* Push the entire container to the left */
  }

    #chat-input {
      display: flex;
      padding: 10px;
      width: 450px;
    }

    #msg {
      flex: 1;
      padding: 5px;
      border-radius: 5px;
    }

    #typing-indicator {
      display: none;
      color: #888;
    }

    #icon {
      margin-right: 10px;
    }
  </style>
{% endblock %}
